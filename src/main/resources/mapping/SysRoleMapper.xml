<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gj.app.mapper.SysRoleMapper">
  <resultMap id="BaseResultMap" type="com.gj.app.entity.SysRole">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="roleName" jdbcType="VARCHAR" property="rolename" />
    <result column="roleSign" jdbcType="VARCHAR" property="rolesign" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="userIdCreate" jdbcType="BIGINT" property="useridcreate" />
    <result column="gmtCreate" jdbcType="TIMESTAMP" property="gmtcreate" />
    <result column="gmtModified" jdbcType="TIMESTAMP" property="gmtmodified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, roleName, roleSign, remark, userIdCreate, gmtCreate, gmtModified
  </sql>
  <select id="selectByExample" parameterType="com.gj.app.entity.SysRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.gj.app.entity.SysRoleExample">
    delete from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gj.app.entity.SysRole">
    insert into sys_role (id, roleName, roleSign, 
      remark, userIdCreate, gmtCreate, 
      gmtModified)
    values (#{id,jdbcType=BIGINT}, #{rolename,jdbcType=VARCHAR}, #{rolesign,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{useridcreate,jdbcType=BIGINT}, #{gmtcreate,jdbcType=TIMESTAMP}, 
      #{gmtmodified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gj.app.entity.SysRole">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="rolename != null">
        roleName,
      </if>
      <if test="rolesign != null">
        roleSign,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="useridcreate != null">
        userIdCreate,
      </if>
      <if test="gmtcreate != null">
        gmtCreate,
      </if>
      <if test="gmtmodified != null">
        gmtModified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="rolesign != null">
        #{rolesign,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="useridcreate != null">
        #{useridcreate,jdbcType=BIGINT},
      </if>
      <if test="gmtcreate != null">
        #{gmtcreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtmodified != null">
        #{gmtmodified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gj.app.entity.SysRoleExample" resultType="java.lang.Long">
    select count(*) from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.rolename != null">
        roleName = #{record.rolename,jdbcType=VARCHAR},
      </if>
      <if test="record.rolesign != null">
        roleSign = #{record.rolesign,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.useridcreate != null">
        userIdCreate = #{record.useridcreate,jdbcType=BIGINT},
      </if>
      <if test="record.gmtcreate != null">
        gmtCreate = #{record.gmtcreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtmodified != null">
        gmtModified = #{record.gmtmodified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_role
    set id = #{record.id,jdbcType=BIGINT},
      roleName = #{record.rolename,jdbcType=VARCHAR},
      roleSign = #{record.rolesign,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      userIdCreate = #{record.useridcreate,jdbcType=BIGINT},
      gmtCreate = #{record.gmtcreate,jdbcType=TIMESTAMP},
      gmtModified = #{record.gmtmodified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="batchInsert" parameterType="list">
    insert into sys_role
      (id,roleName,roleSign,
      remark,userIdCreate,gmtCreate,
      gmtModified)
    values 
    <foreach collection="list" item="item" index="index" separator="," > 
      ( #{ item.id, jdbcType=BIGINT},#{ item.rolename, jdbcType=VARCHAR},#{ item.rolesign, jdbcType=VARCHAR},
      #{ item.remark, jdbcType=VARCHAR},#{ item.useridcreate, jdbcType=BIGINT},#{ item.gmtcreate, jdbcType=TIMESTAMP},
      #{ item.gmtmodified, jdbcType=TIMESTAMP}) 
    </foreach>
  </insert>
  <update id="batchUpdate" parameterType="list">
    <foreach collection="list" item="item" index="index" separator=";" > 
      update sys_role 
      <set>
        <if test="item.id != null"> 
          id = #{item.id, jdbcType = BIGINT},
        </if> 
        <if test="item.rolename != null"> 
          roleName = #{item.rolename, jdbcType = VARCHAR},
        </if> 
        <if test="item.rolesign != null"> 
          roleSign = #{item.rolesign, jdbcType = VARCHAR},
        </if> 
        <if test="item.remark != null"> 
          remark = #{item.remark, jdbcType = VARCHAR},
        </if> 
        <if test="item.useridcreate != null"> 
          userIdCreate = #{item.useridcreate, jdbcType = BIGINT},
        </if> 
        <if test="item.gmtcreate != null"> 
          gmtCreate = #{item.gmtcreate, jdbcType = TIMESTAMP},
        </if> 
        <if test="item.gmtmodified != null"> 
          gmtModified = #{item.gmtmodified, jdbcType = TIMESTAMP},
        </if> 
      </set>
      <where>
      </where>
    </foreach>
  </update>
</mapper>