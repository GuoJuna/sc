<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gj.app.mapper.SysDictMapper">
  <resultMap id="BaseResultMap" type="com.gj.app.entity.SysDict">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="sort" jdbcType="DECIMAL" property="sort" />
    <result column="parentId" jdbcType="BIGINT" property="parentid" />
    <result column="createBy" jdbcType="INTEGER" property="createby" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="updateBy" jdbcType="BIGINT" property="updateby" />
    <result column="updateDate" jdbcType="TIMESTAMP" property="updatedate" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="delFlag" jdbcType="CHAR" property="delflag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, value, type, description, sort, parentId, createBy, createDate, updateBy, 
    updateDate, remarks, delFlag
  </sql>
  <select id="selectByExample" parameterType="com.gj.app.entity.SysDictExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.gj.app.entity.SysDictExample">
    delete from sys_dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gj.app.entity.SysDict">
    insert into sys_dict (id, name, value, 
      type, description, sort, 
      parentId, createBy, createDate, 
      updateBy, updateDate, remarks, 
      delFlag)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{sort,jdbcType=DECIMAL}, 
      #{parentid,jdbcType=BIGINT}, #{createby,jdbcType=INTEGER}, #{createdate,jdbcType=TIMESTAMP}, 
      #{updateby,jdbcType=BIGINT}, #{updatedate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, 
      #{delflag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gj.app.entity.SysDict">
    insert into sys_dict
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="value != null">
        value,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="parentid != null">
        parentId,
      </if>
      <if test="createby != null">
        createBy,
      </if>
      <if test="createdate != null">
        createDate,
      </if>
      <if test="updateby != null">
        updateBy,
      </if>
      <if test="updatedate != null">
        updateDate,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="delflag != null">
        delFlag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=DECIMAL},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=BIGINT},
      </if>
      <if test="createby != null">
        #{createby,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateby != null">
        #{updateby,jdbcType=BIGINT},
      </if>
      <if test="updatedate != null">
        #{updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delflag != null">
        #{delflag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gj.app.entity.SysDictExample" resultType="java.lang.Long">
    select count(*) from sys_dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_dict
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=DECIMAL},
      </if>
      <if test="record.parentid != null">
        parentId = #{record.parentid,jdbcType=BIGINT},
      </if>
      <if test="record.createby != null">
        createBy = #{record.createby,jdbcType=INTEGER},
      </if>
      <if test="record.createdate != null">
        createDate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateby != null">
        updateBy = #{record.updateby,jdbcType=BIGINT},
      </if>
      <if test="record.updatedate != null">
        updateDate = #{record.updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delflag != null">
        delFlag = #{record.delflag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_dict
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=DECIMAL},
      parentId = #{record.parentid,jdbcType=BIGINT},
      createBy = #{record.createby,jdbcType=INTEGER},
      createDate = #{record.createdate,jdbcType=TIMESTAMP},
      updateBy = #{record.updateby,jdbcType=BIGINT},
      updateDate = #{record.updatedate,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      delFlag = #{record.delflag,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="batchInsert" parameterType="list">
    insert into sys_dict
      (id,name,value,
      type,description,sort,
      parentId,createBy,createDate,
      updateBy,updateDate,remarks,
      delFlag)
    values 
    <foreach collection="list" item="item" index="index" separator="," > 
      ( #{ item.id, jdbcType=BIGINT},#{ item.name, jdbcType=VARCHAR},#{ item.value, jdbcType=VARCHAR},
      #{ item.type, jdbcType=VARCHAR},#{ item.description, jdbcType=VARCHAR},#{ item.sort, jdbcType=DECIMAL},
      #{ item.parentid, jdbcType=BIGINT},#{ item.createby, jdbcType=INTEGER},#{ item.createdate, jdbcType=TIMESTAMP},
      #{ item.updateby, jdbcType=BIGINT},#{ item.updatedate, jdbcType=TIMESTAMP},#{ item.remarks, jdbcType=VARCHAR},
      #{ item.delflag, jdbcType=CHAR}) 
    </foreach>
  </insert>
  <update id="batchUpdate" parameterType="list">
    <foreach collection="list" item="item" index="index" separator=";" > 
      update sys_dict 
      <set>
        <if test="item.id != null"> 
          id = #{item.id, jdbcType = BIGINT},
        </if> 
        <if test="item.name != null"> 
          name = #{item.name, jdbcType = VARCHAR},
        </if> 
        <if test="item.value != null"> 
          value = #{item.value, jdbcType = VARCHAR},
        </if> 
        <if test="item.type != null"> 
          type = #{item.type, jdbcType = VARCHAR},
        </if> 
        <if test="item.description != null"> 
          description = #{item.description, jdbcType = VARCHAR},
        </if> 
        <if test="item.sort != null"> 
          sort = #{item.sort, jdbcType = DECIMAL},
        </if> 
        <if test="item.parentid != null"> 
          parentId = #{item.parentid, jdbcType = BIGINT},
        </if> 
        <if test="item.createby != null"> 
          createBy = #{item.createby, jdbcType = INTEGER},
        </if> 
        <if test="item.createdate != null"> 
          createDate = #{item.createdate, jdbcType = TIMESTAMP},
        </if> 
        <if test="item.updateby != null"> 
          updateBy = #{item.updateby, jdbcType = BIGINT},
        </if> 
        <if test="item.updatedate != null"> 
          updateDate = #{item.updatedate, jdbcType = TIMESTAMP},
        </if> 
        <if test="item.remarks != null"> 
          remarks = #{item.remarks, jdbcType = VARCHAR},
        </if> 
        <if test="item.delflag != null"> 
          delFlag = #{item.delflag, jdbcType = CHAR},
        </if> 
      </set>
      <where>
      </where>
    </foreach>
  </update>
</mapper>