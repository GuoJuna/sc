<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gj.app.mapper.SysMenuMapper">
  <resultMap id="BaseResultMap" type="com.gj.app.entity.SysMenu">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="pcode" jdbcType="VARCHAR" property="pcode" />
    <result column="pcodes" jdbcType="VARCHAR" property="pcodes" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="levels" jdbcType="INTEGER" property="levels" />
    <result column="ismenu" jdbcType="INTEGER" property="ismenu" />
    <result column="tips" jdbcType="VARCHAR" property="tips" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="isopen" jdbcType="INTEGER" property="isopen" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, pcode, pcodes, name, icon, url, num, levels, ismenu, tips, status, isopen
  </sql>
  <select id="selectByExample" parameterType="com.gj.app.entity.SysMenuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.gj.app.entity.SysMenuExample">
    delete from sys_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gj.app.entity.SysMenu">
    insert into sys_menu (id, code, pcode, 
      pcodes, name, icon, 
      url, num, levels, ismenu, 
      tips, status, isopen
      )
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{pcode,jdbcType=VARCHAR}, 
      #{pcodes,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, #{levels,jdbcType=INTEGER}, #{ismenu,jdbcType=INTEGER}, 
      #{tips,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{isopen,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gj.app.entity.SysMenu">
    insert into sys_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="pcode != null">
        pcode,
      </if>
      <if test="pcodes != null">
        pcodes,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="levels != null">
        levels,
      </if>
      <if test="ismenu != null">
        ismenu,
      </if>
      <if test="tips != null">
        tips,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isopen != null">
        isopen,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="pcode != null">
        #{pcode,jdbcType=VARCHAR},
      </if>
      <if test="pcodes != null">
        #{pcodes,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="levels != null">
        #{levels,jdbcType=INTEGER},
      </if>
      <if test="ismenu != null">
        #{ismenu,jdbcType=INTEGER},
      </if>
      <if test="tips != null">
        #{tips,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isopen != null">
        #{isopen,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gj.app.entity.SysMenuExample" resultType="java.lang.Long">
    select count(*) from sys_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_menu
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.pcode != null">
        pcode = #{record.pcode,jdbcType=VARCHAR},
      </if>
      <if test="record.pcodes != null">
        pcodes = #{record.pcodes,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.levels != null">
        levels = #{record.levels,jdbcType=INTEGER},
      </if>
      <if test="record.ismenu != null">
        ismenu = #{record.ismenu,jdbcType=INTEGER},
      </if>
      <if test="record.tips != null">
        tips = #{record.tips,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.isopen != null">
        isopen = #{record.isopen,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_menu
    set id = #{record.id,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      pcode = #{record.pcode,jdbcType=VARCHAR},
      pcodes = #{record.pcodes,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      levels = #{record.levels,jdbcType=INTEGER},
      ismenu = #{record.ismenu,jdbcType=INTEGER},
      tips = #{record.tips,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      isopen = #{record.isopen,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="batchInsert" parameterType="list">
    insert into sys_menu
      (id,code,pcode,
      pcodes,name,icon,
      url,num,levels,
      ismenu,tips,status,
      isopen)
    values 
    <foreach collection="list" item="item" index="index" separator="," > 
      ( #{ item.id, jdbcType=BIGINT},#{ item.code, jdbcType=VARCHAR},#{ item.pcode, jdbcType=VARCHAR},
      #{ item.pcodes, jdbcType=VARCHAR},#{ item.name, jdbcType=VARCHAR},#{ item.icon, jdbcType=VARCHAR},
      #{ item.url, jdbcType=VARCHAR},#{ item.num, jdbcType=INTEGER},#{ item.levels, jdbcType=INTEGER},
      #{ item.ismenu, jdbcType=INTEGER},#{ item.tips, jdbcType=VARCHAR},#{ item.status, jdbcType=INTEGER},
      #{ item.isopen, jdbcType=INTEGER}) 
    </foreach>
  </insert>
  <update id="batchUpdate" parameterType="list">
    <foreach collection="list" item="item" index="index" separator=";" > 
      update sys_menu 
      <set>
        <if test="item.id != null"> 
          id = #{item.id, jdbcType = BIGINT},
        </if> 
        <if test="item.code != null"> 
          code = #{item.code, jdbcType = VARCHAR},
        </if> 
        <if test="item.pcode != null"> 
          pcode = #{item.pcode, jdbcType = VARCHAR},
        </if> 
        <if test="item.pcodes != null"> 
          pcodes = #{item.pcodes, jdbcType = VARCHAR},
        </if> 
        <if test="item.name != null"> 
          name = #{item.name, jdbcType = VARCHAR},
        </if> 
        <if test="item.icon != null"> 
          icon = #{item.icon, jdbcType = VARCHAR},
        </if> 
        <if test="item.url != null"> 
          url = #{item.url, jdbcType = VARCHAR},
        </if> 
        <if test="item.num != null"> 
          num = #{item.num, jdbcType = INTEGER},
        </if> 
        <if test="item.levels != null"> 
          levels = #{item.levels, jdbcType = INTEGER},
        </if> 
        <if test="item.ismenu != null"> 
          ismenu = #{item.ismenu, jdbcType = INTEGER},
        </if> 
        <if test="item.tips != null"> 
          tips = #{item.tips, jdbcType = VARCHAR},
        </if> 
        <if test="item.status != null"> 
          status = #{item.status, jdbcType = INTEGER},
        </if> 
        <if test="item.isopen != null"> 
          isopen = #{item.isopen, jdbcType = INTEGER},
        </if> 
      </set>
      <where>
      </where>
    </foreach>
  </update>
</mapper>