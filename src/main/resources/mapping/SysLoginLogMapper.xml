<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gj.app.mapper.SysLoginLogMapper">
  <resultMap id="BaseResultMap" type="com.gj.app.entity.SysLoginLog">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="logname" jdbcType="VARCHAR" property="logname" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="succeed" jdbcType="VARCHAR" property="succeed" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.gj.app.entity.SysLoginLog">
    <result column="message" jdbcType="LONGVARCHAR" property="message" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, logname, userid, createtime, succeed, ip
  </sql>
  <sql id="Blob_Column_List">
    message
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.gj.app.entity.SysLoginLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_login_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.gj.app.entity.SysLoginLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_login_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.gj.app.entity.SysLoginLogExample">
    delete from sys_login_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gj.app.entity.SysLoginLog">
    insert into sys_login_log (id, logname, userid, 
      createtime, succeed, ip, 
      message)
    values (#{id,jdbcType=INTEGER}, #{logname,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{succeed,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{message,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gj.app.entity.SysLoginLog">
    insert into sys_login_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="logname != null">
        logname,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="succeed != null">
        succeed,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="message != null">
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="logname != null">
        #{logname,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="succeed != null">
        #{succeed,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gj.app.entity.SysLoginLogExample" resultType="java.lang.Long">
    select count(*) from sys_login_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_login_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.logname != null">
        logname = #{record.logname,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.succeed != null">
        succeed = #{record.succeed,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update sys_login_log
    set id = #{record.id,jdbcType=INTEGER},
      logname = #{record.logname,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      succeed = #{record.succeed,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      message = #{record.message,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_login_log
    set id = #{record.id,jdbcType=INTEGER},
      logname = #{record.logname,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      succeed = #{record.succeed,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="batchInsert" parameterType="list">
    insert into sys_login_log
      (id,logname,userid,
      createtime,succeed,ip,
      message)
    values 
    <foreach collection="list" item="item" index="index" separator="," > 
      ( #{ item.id, jdbcType=INTEGER},#{ item.logname, jdbcType=VARCHAR},#{ item.userid, jdbcType=INTEGER},
      #{ item.createtime, jdbcType=TIMESTAMP},#{ item.succeed, jdbcType=VARCHAR},#{ item.ip, jdbcType=VARCHAR},
      #{ item.message, jdbcType=LONGVARCHAR}) 
    </foreach>
  </insert>
  <update id="batchUpdate" parameterType="list">
    <foreach collection="list" item="item" index="index" separator=";" > 
      update sys_login_log 
      <set>
        <if test="item.id != null"> 
          id = #{item.id, jdbcType = INTEGER},
        </if> 
        <if test="item.logname != null"> 
          logname = #{item.logname, jdbcType = VARCHAR},
        </if> 
        <if test="item.userid != null"> 
          userid = #{item.userid, jdbcType = INTEGER},
        </if> 
        <if test="item.createtime != null"> 
          createtime = #{item.createtime, jdbcType = TIMESTAMP},
        </if> 
        <if test="item.succeed != null"> 
          succeed = #{item.succeed, jdbcType = VARCHAR},
        </if> 
        <if test="item.ip != null"> 
          ip = #{item.ip, jdbcType = VARCHAR},
        </if> 
        <if test="item.message != null"> 
          message = #{item.message, jdbcType = LONGVARCHAR},
        </if> 
      </set>
      <where>
      </where>
    </foreach>
  </update>
</mapper>